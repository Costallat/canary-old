---

name: Build on Ubuntu

on: [push, pull_request]

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        buildtype: [Debug, Release]
        include:
          - os: ubuntu-18.04
            triplet: x64-linux
          - os: ubuntu-20.04
            triplet: x64-linux

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true

      - name: Install Dependencies
        run: >
          sudo apt-get update && sudo apt-get install ccache build-essential
          libluajit-5.1-dev zip

      - name: CCache
        id: ccache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ matrix.os }}-${{ matrix.buildtype }}-${{ hashFiles('**/src') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.buildtype }}-${{ hashFiles('**/src') }}
            ${{ matrix.os }}-${{ matrix.buildtype }}-

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          additionalCachedPaths: ${{ github.workspace }}/build/vcpkg_installed
          vcpkgGitCommitId: b9cd2a7958dec657fb869ec487d2a98cf39a8d48

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: 'Run CMake with Ninja, install dependencies with vcpkg, build with CMake'
        uses: lukka/run-cmake@v3
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: ${{ github.workspace }}/build/
          cmakeBuildType: ${{ matrix.buildtype }}

      - name: Prepare artifact contents
        shell: bash
        run: |
          mv config.lua.dist config.lua
          mv build/bin/canary .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-canary-amd64-${{ matrix.buildtype }}-${{ steps.gitversion.outputs.semVer }}
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/build/
            !${{ github.workspace }}/vcpkg/
            !${{ github.workspace }}/.git/
            !${{ github.workspace }}/.github/
            !${{ github.workspace }}/.appveyor.yml
            !${{ github.workspace }}/.editorconfig
            !${{ github.workspace }}/.gitignore
            !${{ github.workspace }}/.reviewdog.yml
            !${{ github.workspace }}/.travis.yml
            !${{ github.workspace }}/tests/
            !${{ github.workspace }}/cmake/
            !${{ github.workspace }}/sonar-project.properties
            !${{ github.workspace }}/Jenkinsfile
            !${{ github.workspace }}/GitVersion.yml
